{"version":3,"file":"static/js/896.d5bb4716.chunk.js","mappings":"qLACA,EAA+B,iCAA/B,EAAgF,kCAAhF,EAAmI,mC,kBCkDnI,EA9CmB,SAAHA,GAAsB,IAAhBC,EAAQD,EAARC,SAElBC,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAC9BI,EAAQF,EAAaG,IAAI,SAC/BC,GAAsCC,EAAAA,EAAAA,UAAc,OAALH,QAAK,IAALA,EAAAA,EAAS,IAAGI,GAAAP,EAAAA,EAAAA,GAAAK,EAAA,GAApDG,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAmBlC,OACIG,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAkBhB,SAZlB,SAACiB,GAClBA,EAAEC,iBACkB,KAAhBN,GACAO,MAAM,mBAEVb,EAAgB,CAAEC,MAAOK,IACzBZ,EAASY,EACb,EAK8DQ,SAAA,EACtDC,EAAAA,EAAAA,KAAA,SAAON,UAAWC,EAAmBM,aAAa,MAC9CC,WAAS,EACTC,KAAK,QACLC,SApBU,SAACR,GACnBJ,EAAeI,EAAES,OAAOC,MAAMC,cAClC,EAmBYD,MAAOf,EACPiB,KAAK,OACLC,YAAY,wBAGhBT,EAAAA,EAAAA,KAAA,UAAQN,UAAWC,EAAoBa,KAAK,SAAQT,SAAC,aAGjE,ECzCA,EAAsC,uCAAtC,EAA4F,gCAA5F,EAA2I,gC,SCkD3I,EA3CmB,WAEf,IAAMW,GAAWC,EAAAA,EAAAA,MACjBvB,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAP,EAAAA,EAAAA,GAAAK,EAAA,GAAjCwB,EAAMtB,EAAA,GAAEuB,EAASvB,EAAA,GAExBV,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCgC,GAA4BzB,EAAAA,EAAAA,UAAS,IAAG0B,GAAAhC,EAAAA,EAAAA,GAAA+B,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAClBG,EAAalC,EAAaG,IAAI,UAEpCgC,EAAAA,EAAAA,YAAU,WACNC,QAAQC,IAAIH,IACZ3B,EAAAA,EAAAA,IAAYyB,GAAQM,MAAK,SAAAV,GACrBC,EAAUD,EAAOW,SACjBH,QAAQC,IAAIT,EAChB,GACJ,GAAG,CAACM,EAAYF,IAQhB,OAAQvB,EAAAA,EAAAA,MAAA,WAASC,UAAWC,EAAwBI,SAAA,EAChDC,EAAAA,EAAAA,KAACwB,EAAU,CAAC7C,SAPS,SAACO,GACtBD,EAAgB,SAADwC,OAAUvC,IACzB+B,EAAU/B,GACVkC,QAAQC,IAAIrC,EAChB,IAIK4B,IAAUZ,EAAAA,EAAAA,KAAA,MAAIN,UAAWC,EAAiBI,SAEnCa,EAAOc,KAAI,SAAAhD,GAAiC,IAA9BiD,EAAKjD,EAALiD,MAAOC,EAAWlD,EAAXkD,YAAaC,EAAEnD,EAAFmD,GAC9B,OAAQ7B,EAAAA,EAAAA,KAAA,MAAIN,UAAWC,EAAiBI,UAEpCN,EAAAA,EAAAA,MAACqC,EAAAA,GAAI,CAACC,GAAE,WAAAN,OAAaI,GAAMG,MAAO,CAACC,KAAMvB,GAAUX,SAAA,EAC/CC,EAAAA,EAAAA,KAAA,OAAKkC,IAAG,kCAAAT,OAAoCG,GAAeO,IAAKR,KAChE3B,EAAAA,EAAAA,KAAA,KAAAD,SAAK4B,QAJiCE,EAOlD,QAMhB,C","sources":["webpack://reactrouterhw/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","webpack://reactrouterhw/./src/pages/MoviesPage/MoviePage.module.css?dc7a","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"search__form\":\"SearchForm_search__form__jrxBg\",\"search__input\":\"SearchForm_search__input__w7BzV\",\"search__button\":\"SearchForm_search__button__ufdDR\"};","import { useSearchParams } from 'react-router-dom'\nimport css from './SearchForm.module.css'\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchForm = ({ onSubmit }) => {\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query');\n    const [searchMovie, setSearchMovie] = useState(query ?? '');\n\n    // console.log(query)\n\n    const onInputChange = (e) => {\n        setSearchMovie(e.target.value.toLowerCase())\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (searchMovie === '') {\n            alert('Enter something')\n        }\n        setSearchParams({ query: searchMovie });\n        onSubmit(searchMovie);\n    }\n\n\n\n    return (\n        <form className={css.search__form} onSubmit={handleSubmit}>\n            <input className={css.search__input} autoComplete='off'\n                autoFocus\n                name='query'\n                onChange={onInputChange}\n                value={searchMovie}\n                type=\"text\"\n                placeholder='Search for a movie'\n            />\n\n            <button className={css.search__button} type=\"submit\">Search</button>\n        </form>\n    )\n}\n\nSearchForm.propTypes = {\n    onSubmit: PropTypes.func\n}\n\n\n\n\nexport default SearchForm;","// extracted by mini-css-extract-plugin\nexport default {\"moviespage__section\":\"MoviePage_moviespage__section__2G2b6\",\"movies__list\":\"MoviePage_movies__list__pIpmC\",\"movies__item\":\"MoviePage_movies__item__6Xwn2\"};","import SearchForm from 'components/SearchForm/SearchForm'\nimport css from './MoviePage.module.css'\nimport { useEffect, useState } from 'react'\nimport { searchMovie } from 'services/getApiData'\nimport { Link, useLocation, useSearchParams } from 'react-router-dom'\n\n\n\nconst MoviesPage = () => {\n\n    const location = useLocation();\n    const [movies, setMovies] = useState([])\n    // const [searchQuery, setSearchQuery] = useState('')\n    const [searchParams, setSearchParams] = useSearchParams()\n    const [filter, setFilter] = useState('')\n    const queryValue = searchParams.get('query');\n\n    useEffect(() => {\n        console.log(queryValue)\n        searchMovie(filter).then(movies => {\n            setMovies(movies.results)\n            console.log(movies)\n        })\n    }, [queryValue, filter])\n\n    const handleFormSubmit = (query) => {\n        setSearchParams(`query=${query}`);\n        setFilter(query)\n        console.log(searchParams)\n    }\n\n    return (<section className={css.moviespage__section}>\n        <SearchForm onSubmit={handleFormSubmit} />\n        {movies && <ul className={css.movies__list}>\n            {\n                movies.map(({ title, poster_path, id }) => {\n                    return (<li className={css.movies__item} key={id}>\n\n                        <Link to={`/movies/${id}`} state={{from: location}}>\n                            <img src={`https://image.tmdb.org/t/p/w300${poster_path}`} alt={title} />\n                            <p >{title}</p>\n                        </Link>\n                    </li>)\n                })\n            }\n        </ul>\n        }\n\n    </section>)\n}\n\nexport default MoviesPage\n\n"],"names":["_ref","onSubmit","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","query","get","_useState","useState","_useState2","searchMovie","setSearchMovie","_jsxs","className","css","e","preventDefault","alert","children","_jsx","autoComplete","autoFocus","name","onChange","target","value","toLowerCase","type","placeholder","location","useLocation","movies","setMovies","_useState3","_useState4","filter","setFilter","queryValue","useEffect","console","log","then","results","SearchForm","concat","map","title","poster_path","id","Link","to","state","from","src","alt"],"sourceRoot":""}